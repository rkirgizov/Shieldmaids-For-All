# Character Interactions from FP1

##################
# Designate a Shieldmaiden
# by Alexander Oltner
# Edited by rkirgizov
##################
designate_shieldmaiden_interaction = {
	category = interaction_category_vassal
	common_interaction = yes
	send_name = SEND_PROPOSAL
	interface_priority = 120

	desc = {
		first_valid = {	
			triggered_desc = {
				trigger = { has_game_rule = shieldmaids_for_all }
				desc = designate_shieldmaiden_interaction_sfa_desc
			}
			triggered_desc = {
				trigger = { NOT = { has_game_rule = shieldmaids_for_all } }
				desc = designate_shieldmaiden_interaction_desc
			}
		}
	}

	is_shown = {
		scope:actor = {
			has_fp1_dlc_trigger = yes
			is_physically_able_adult = yes
			#Has access to the appropriate cultural parameter.
			# sfa
			OR = { 
				culture = { has_cultural_parameter = has_access_to_shieldmaidens }
				has_game_rule = shieldmaids_for_all	
			}
			NOT = {
				faith = { has_doctrine = doctrine_gender_equal }
			}
		}
		scope:recipient = {
			NOT = { has_trait = incapable }
			is_courtier_of = scope:actor
			# sfa
			# OR = { 
			# 	has_game_rule = shieldmaids_for_all	
			# 	is_close_family_of = scope:actor
			# }
			NOT = { has_trait = shieldmaiden }
			OR = {
				AND = {
					is_female = yes
					faith = { has_doctrine = doctrine_gender_male_dominated }
				}
				AND = {
					is_male = yes
					faith = { has_doctrine = doctrine_gender_female_dominated }
				}
			}
			# OR = {
			# 	NOT = { has_game_rule = shieldmaids_for_all }
			# 	AND = {
			# 		has_game_rule = shieldmaids_for_all
			# 		OR = { # sfa
			# 			martial >= 10
			# 			has_trait = brave
			# 			has_trait = ambitious
			# 			has_trait = diligent
			# 			has_trait = just
			# 			has_trait = blademaster_1
			# 			has_trait = blademaster_2
			# 			has_trait = blademaster_3
			# 			has_trait = hunter_1
			# 			has_trait = hunter_2
			# 			has_trait = hunter_3
			# 			has_trait = gallant
			# 			has_trait = varangian
			# 			has_trait = berserker
			# 			has_trait = strong
			# 			has_trait = athletic
			# 			has_trait = education_martial_prowess_1
			# 			has_trait = education_martial_prowess_2
			# 			has_trait = education_martial_prowess_3
			# 			has_trait = education_martial_prowess_4
			# 			has_trait = education_martial_1
			# 			has_trait = education_martial_2
			# 			has_trait = education_martial_3
			# 			has_trait = education_martial_4
			# 		}			
			# 	}
			# }
		}
	}

	is_valid_showing_failures_only = {
		scope:recipient = {
			# prowess >= decent_skill_rating
			is_adult = yes
			is_imprisoned = no
			OR = {
				AND = {
					has_game_rule = shieldmaids_for_all
					NOT = { has_trait = pregnant }		
				}
				NOT = { has_game_rule = shieldmaids_for_all }
			}			
		}
	}

	on_accept = {
		scope:recipient = {
			add_trait = shieldmaiden
			add_opinion = {
				target = scope:actor
				modifier = fp1_accepted_my_sword_opinion
			}
		}
		scope:actor = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
				paranoid = minor_stress_impact_gain
			}
			if = {
				limit = { has_game_rule = shieldmaids_for_all }
				calling_of_the_shieldmaidens = yes
				if = {
					limit = {
						AND = {
							scope:recipient = { is_lowborn = no }
							scope:recipient = { can_set_relation_potential_friend_trigger = { CHARACTER = scope:actor } }
						}
					}
					scope:recipient = {
						set_relation_potential_friend = scope:actor
					}
				}	
			}				
		}
		hidden_effect = {
			scope:actor = {
				send_interface_toast = {
					title = designate_shieldmaiden_interaction_notification
					left_icon = scope:actor					
					right_icon = scope:recipient
					show_as_tooltip = {
						scope:recipient = {
							add_trait_force_tooltip = shieldmaiden
						}
						stress_impact = {
							arrogant = medium_stress_impact_gain
							paranoid = minor_stress_impact_gain
						}
					}
				}
			}
		}
	}

	cost = {
		prestige = {
			if = {
				limit = { has_game_rule = shieldmaids_for_all }
				add = {
					value = scope:actor.medium_prestige_value
					desc = DREAD_BASE
				}	
				if = {
					limit = {
						scope:recipient = { is_lowborn = yes }
					}
					add = {
						value = minor_prestige_value
						desc = LOWBORN_DESC
					}					
				}
				###COMMANDER TRAITS###
				if = {
					limit = { scope:recipient.number_of_commander_traits >= 1 } 
					add = {
						value = scope:recipient.number_of_commander_traits
						multiply = 15
						min = 0
						desc = game_concept_commander_traits
					}
				}
				###TRAITS###
				if = {
					limit = { scope:recipient.num_sinful_traits > 0 }
					add = {
						value = scope:recipient.num_sinful_traits
						multiply = 30
						min = 0
						desc = THEY_ARE_SINFUL
					}
				}
				if = {
					limit = { scope:recipient = { has_trait = lazy } }
					add = {
						value = 25
						desc = trait_lazy
					}
				}		
				if = {
					limit = { scope:recipient = { has_trait = craven } }
					add = {
						value = 150
						desc = trait_craven
					}
				}	
				if = {
					limit = { scope:recipient = { has_trait = dwarf } }
					add = {
						value = 200
						desc = trait_craven
					}
				}			
				if = {
					limit = { scope:recipient = { has_trait = hunchbacked } }
					add = {
						value = 250
						desc = trait_craven
					}
				}		
				if = {
					limit = { scope:recipient = { has_character_modifier = banished_shieldmaiden_modifier } }
					add = {
						value = 100
						desc = WAS_BANISHED_SHIELDMAID_COST_DESC
					}
				}	
			}
			else = {
				add = {
					value = scope:actor.major_prestige_value
				}	 
			}	
		}
		gold = {
			if = {
				limit = { has_game_rule = shieldmaids_for_all }
				add = {
					value = scope:recipient.individual_recruit_guest_interaction_cost
					desc = DREAD_BASE
				}
				###DYNASTY AND LOWBORN###
				if = {
					limit = { exists = scope:recipient.dynasty }
					add = {
						value = scope:recipient.dynasty.dynasty_prestige_level #0-10
						multiply = 10 #Max 50
						desc = CHAR_DYNASTY_LEVEL_COST_DESC
					}
				}		
				if = {
					limit = { scope:recipient = { is_lowborn = yes } }
					add = {
						value = minor_gold_value
						desc = LOWBORN_DESC
					}
				}
				if = {
					limit = { scope:recipient = { has_trait = education_martial_1 } }
					add = {
						value = 5
						desc = trait_education_martial_1
					}
				}
				else_if = {
					limit = { scope:recipient = { has_trait = education_martial_2 } }
					add = {
						value = 10
						desc = trait_education_martial_2
					}
				}	
				else_if = {
					limit = { scope:recipient = { has_trait = education_martial_3 } }
					add = {
						value = 15
						desc = trait_education_martial_3
					}
				}	
				else_if = {
					limit = { scope:recipient = { has_trait = education_martial_4 } }
					add = {
						value = 20
						desc = trait_education_martial_4
					}
				}		
				###COMMANDER TRAITS###
				if = {
					limit = { scope:recipient = { number_of_commander_traits >= 1 } }
					add = {
						value = scope:recipient.number_of_commander_traits
						multiply = 5
						min = 0
						desc = game_concept_commander_traits
					}
				}
				###TRAITS###
				if = {
					limit = { scope:recipient = { number_of_lifestyle_traits >= 1 } }
					add = {
						value = scope:recipient.number_of_lifestyle_traits
						multiply = 5
						min = 0
						desc = game_concept_lifestyle_traits
					}
				}
				if = {
					limit = { scope:recipient = { has_trait = ambitious } }
					add = {
						value = 5
						desc = trait_ambitious
					}
				}		
			}
		}
	}
	ai_accept = {
		base = 0
		# Weight up for personality values.
		ai_value_modifier = {
			who = scope:recipient
			ai_boldness = {
				if = {
					limit = {
						scope:recipient = {
							NOT = { ai_boldness = 0 }
						}
					}
					value = 0.5
				}
			}
			ai_compassion = {
				if = {
					limit = {
						scope:recipient = {
							NOT = { ai_compassion = 0 }
						}
					}
					value = -0.5
				}
			}
		}	
		# ------
		modifier = {
			trigger = {
				NOT = { has_game_rule = shieldmaids_for_all }
				always = scope:hook
			}
			add = 100
			desc = SCHEME_WEAK_HOOK_USED
		}	
		modifier = {
			trigger = {
				NOT = { has_game_rule = shieldmaids_for_all }
				has_education_martial_trigger = yes
			}
			add = 20
			desc = INTERACTION_MARTIAL_EDUCATION
		}
		# ------
		modifier = {
			trigger = { has_game_rule = shieldmaids_for_all }
			scope:hook = yes
			add = 100
			scope:actor = { has_weak_hook = scope:recipient }
			desc = SCHEME_WEAK_HOOK_USED
		}
		modifier = {
			trigger = { has_game_rule = shieldmaids_for_all }
			scope:hook = yes
			add = 1000
			scope:actor = { has_strong_hook = scope:recipient }
			desc = SCHEME_STRONG_HOOK_USED
		}
		modifier = {
			trigger = { has_game_rule = shieldmaids_for_all }
			add = -100
			scope:recipient = { has_character_modifier = banished_shieldmaiden_modifier }
			desc = WAS_BANISHED_SHIELDMAID_AI_ACCEPT_DESC
		}
		opinion_modifier = { # Opinion Factor
			trigger = { has_game_rule = shieldmaids_for_all }
			who = scope:recipient
			opinion_target = scope:actor
			multiplier = 1.0
			desc = AI_OPINION_REASON
		}
		modifier = {
			trigger = { has_game_rule = shieldmaids_for_all }
			desc = SKILL_DIPLOMACY_AI_ACCEPT_DESC
			add = {
				value = scope:actor.diplomacy
			}
		}
		modifier = {
			trigger = { has_game_rule = shieldmaids_for_all }
			add = 100
			scope:recipient = { is_lowborn = yes }
			desc = CHAR_LOWBORN_DESC_AI_ACCEPT_DESC
		}
		modifier = {
			trigger = { has_game_rule = shieldmaids_for_all }
			scope:recipient = { has_trait = education_martial_1 }
			add = 25
			desc = INTERACTION_MARTIAL_EDUCATION
		}
		modifier = {
			trigger = { has_game_rule = shieldmaids_for_all }
			scope:recipient = { has_trait = education_martial_2 }
			add = 50
			desc = INTERACTION_MARTIAL_EDUCATION
		}
		modifier = {
			trigger = { has_game_rule = shieldmaids_for_all }
			scope:recipient = { has_trait = education_martial_3 }
			add = 75
			desc = INTERACTION_MARTIAL_EDUCATION
		}
		modifier = {
			trigger = { has_game_rule = shieldmaids_for_all }
			scope:recipient = { has_trait = education_martial_4 }
			add = 100
			desc = INTERACTION_MARTIAL_EDUCATION
		}
		# ------
		modifier = {
			add = -1000
			has_trait = craven
			desc = INTERACTION_CRAVEN
		}
		modifier = {
			add = -50
			has_trait = content
			desc = INTERACTION_CONTENT
		}
		modifier = {
			add = -50
			has_trait = humble
			desc = INTERACTION_HUMBLE
		}
		modifier = {
			add = -50
			has_trait = lazy
			desc = INTERACTION_LAZY
		}
		modifier = {
			add = 100
			has_trait = brave
			desc = INTERACTION_BRAVE
		}
		modifier = {
			add = 25
			has_trait = ambitious
			desc = INTERACTION_AMBITIOUS
		}
		# ------
		modifier = {
			trigger = { has_game_rule = shieldmaids_for_all }
			add = intimidated_reason_value
			scope:recipient = {
				has_dread_level_towards = {
					target = scope:actor
					level = 1
				}
			}
			desc = INTIMIDATED_REASON
		}
		modifier = {
			trigger = { has_game_rule = shieldmaids_for_all }
			add = cowed_reason_value
			scope:recipient = {
				has_dread_level_towards = {
					target = scope:actor
					level = 2
				}
			}
			desc = COWED_REASON
		}
	}

	auto_accept = {
		custom_description = {
			text = "spending_hook"
			subject = scope:actor
			object = scope:recipient
			AND = {
				NOT = { has_game_rule = shieldmaids_for_all }
				always = scope:hook
				scope:actor = { has_strong_hook = scope:recipient }
			}
		}
	}

	send_option = {
		is_shown = { NOT = { has_game_rule = shieldmaids_for_all } }
		is_valid = {scope:actor = { has_usable_hook = scope:recipient } }
		flag = hook
		localization = SCHEME_HOOK
	}

	should_use_extra_icon = {
		NOT = { has_game_rule = shieldmaids_for_all }
		scope:actor = { has_usable_hook = scope:recipient }
	}

	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"
	
	send_options_exclusive = no

	ai_targets = {
		ai_recipients = courtiers	
	}

	ai_frequency = 180

	ai_potential = {
		#Has access to the appropriate cultural parameter.
		OR = { 
			culture = { has_cultural_parameter = has_access_to_shieldmaidens }
			has_game_rule = shieldmaids_for_all
		}
		prestige > major_prestige_value
		has_fp1_dlc_trigger = yes
		is_physically_able_adult = yes
	}
	
	auto_accept = no

	ai_will_do = {
		base = 100
	}
}

# ##################
# # Reject a Shieldmaiden
# # by kelamor
# ##################
# reject_shieldmaiden_interaction = {
#     category = interaction_category_vassal
# 	common_interaction = yes
	
#     is_shown = {
#         scope:recipient = {
#             NOT = { 
#                 this = scope:actor
#             }
# 			is_courtier_of = scope:actor
#             has_trait = shieldmaiden
#         }
#         scope:actor = {
# 			has_fp1_dlc_trigger = yes
#             is_ruler = yes
#             OR = {
#                 is_ai = no
#                 highest_held_title_tier >= 2
#             }
#         }
#     }

# 	icon = reject_shieldmaiden_interaction_icon
# 	desc = reject_shieldmaiden_interaction_desc
	
#     greeting = negative

# 	auto_accept = yes
# 	# {
# 	# 	scope:recipient = { is_lowborn = yes }		
# 	# }
# 	send_options_exclusive = no
# 	send_option = {
#		# is_shown = {
#		# 	scope:recipient = { is_lowborn = no }
#		# }
# 		is_valid = {
# 			scope:actor = {
# 				has_usable_hook = scope:recipient
# 			}
# 		}
# 		flag = hook
# 		localization = SCHEME_HOOK
# 	}
# 	should_use_extra_icon = {
# 		scope:actor = { has_usable_hook = scope:recipient }
# 	}
# 	extra_icon = "gfx/interface/icons/character_interactions/hook_icon.dds"


# 	cost = {
# 		prestige = {
# 			add = {
# 				value = 50
# 				desc = DREAD_BASE
# 			}
# 			if = {
# 				limit = {
# 					scope:recipient = { is_lowborn = no }
# 				}
# 				add = {
# 					value = minor_prestige_value
# 					desc = NO_LOWBORN_COST_DESC
# 				}
# 			}
# 			if = {
# 				limit = {
# 					scope:recipient = { is_councillor_of = scope:actor }
# 				}
# 				add = {
# 					value = medium_prestige_value
# 					desc = IS_COUNCILLOR_TRIGGER
# 				}
# 			}
# 		}
# 	}

# 	on_send = {
# 		scope:recipient = {
# 			# if there is
# 			remove_character_modifier = banished_shieldmaiden_modifier
# 			remove_opinion = {
# 				target = scope:actor
# 				modifier = fp1_rejected_my_sword_opinion
# 			}
# 			if = {
# 				limit = { has_character_flag = rule_hired_shieldmaid }
# 				remove_character_flag = rule_hired_shieldmaid
# 			}
# 		}
# 	}

#     on_accept = {
#         scope:recipient = {
# 			remove_trait = shieldmaiden
# 			if = {
# 				limit = {
# 					OR = {
# 						is_lowborn = no
# 						has_trait = ambitious
# 					}
# 				}
# 				add_character_modifier = {
# 					modifier = banished_shieldmaiden_modifier
# 					years = 10
# 				}	
# 			}
# 			if = {
# 				limit = {
# 					has_opinion_modifier = {
# 						target = scope:actor
# 						modifier = fp1_accepted_my_sword_opinion
# 					}
# 				}
# 				remove_opinion = {
# 					target = scope:actor
# 					modifier = fp1_accepted_my_sword_opinion
# 				}			
# 			}
# 			add_opinion = {
# 				target = scope:actor
# 				modifier = fp1_rejected_my_sword_opinion
# 			}	
#         }
# 		scope:actor = {
# 			stress_impact = {
# 				paranoid = minor_stress_impact_gain
# 			}
# 			if = {
# 				limit = {
# 					AND = {
# 						scope:recipient = { is_lowborn = no }
# 						scope:recipient = { has_trait = ambitious }
# 						scope:recipient = { can_set_relation_potential_rival_trigger = { CHARACTER = scope:actor } }
# 					}
# 				}
# 				scope:recipient = {
# 					set_relation_potential_rival = scope:actor
# 				}
# 			}	
# 			if = {
# 				limit = { always = scope:hook }
# 				scope:actor = { use_hook = scope:recipient }
# 			}
# 		}		
		
# 		hidden_effect = {
# 			scope:actor = {
# 				send_interface_toast = {
# 					title = reject_shieldmaiden_interaction_notification
# 					left_icon = scope:actor					
# 					right_icon = scope:recipient
# 					show_as_tooltip = {
# 						scope:recipient = {
# 							remove_trait_force_tooltip = shieldmaiden
# 						}
# 						stress_impact = {
# 							paranoid = minor_stress_impact_gain
# 						}
# 					}
# 				}
# 			}
# 		}
		
#     }

# 	ai_accept = {
# 		base = 0

# 		modifier = {
# 			desc = SKILL_DIPLOMACY_AI_ACCEPT_DESC
# 			add = {
# 				value = scope:actor.diplomacy
# 			}
# 		}
# 		modifier = {
# 			add = -50
# 			scope:recipient = { has_weak_hook = scope:actor }
# 			desc = CHAR_HAS_HOOK_ON_ME_AI_ACCEPT_DESC
# 		}
# 		modifier = {
# 			add = -100
# 			scope:recipient = { has_strong_hook = scope:actor }
# 			desc = CHAR_HAS_STRONG_HOOK_ON_ME_AI_ACCEPT_DESC
# 		}
# 		modifier = {
# 			scope:hook = yes
# 			add = 100
# 			scope:actor = { has_weak_hook = scope:recipient }
# 			desc = SCHEME_WEAK_HOOK_USED
# 		}
# 		modifier = {
# 			scope:hook = yes
# 			add = 1000
# 			scope:actor = { has_strong_hook = scope:recipient }
# 			desc = SCHEME_STRONG_HOOK_USED
# 		}
# 		modifier = {
# 			add = -20
# 			has_trait = ambitious
# 			desc = INTERACTION_AMBITIOUS
# 		}
# 		modifier = {
# 			add = -30
# 			scope:recipient = { is_lowborn = no }
# 			desc = CHAR_NO_LOWBORN_DESC_AI_ACCEPT_DESC
# 		}
# 		modifier = {
# 			add = intimidated_reason_value
# 			scope:recipient = {
# 				has_dread_level_towards = {
# 					target = scope:actor
# 					level = 1
# 				}
# 			}
# 			desc = INTIMIDATED_REASON
# 		}
# 		modifier = {
# 			add = cowed_reason_value
# 			scope:recipient = {
# 				has_dread_level_towards = {
# 					target = scope:actor
# 					level = 2
# 				}
# 			}
# 			desc = COWED_REASON
# 		}
# 		opinion_modifier = { # Opinion Factor
# 			who = scope:recipient
# 			opinion_target = scope:actor
# 			multiplier = 1.0
# 			desc = AI_OPINION_REASON
# 		}
# 	}

# 	ai_will_do = {
# 		base = 100
# 	}
# }
# }

