######################################################
################# SHIELDMAIDENS VIEW ###################
######################################################

window = {
	name = "shieldmaidens_view"
	size = { 540 865 }
	parentanchor = top|center
	position = { -110 170 }
	movable = yes
	layer = middle
	
	using = Window_Background_Subwindow

	state = {
		name = _show
		using = Animation_FadeIn_Quick
		position = { -110 170 }
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Quick
		position_x = -570
	}

	vbox = {
		spacing = 5
		
		header_pattern = {
			layoutpolicy_horizontal = expanding
        	size = { 100 56 }

			blockoverride "header_text"
			{
				text = "SHIELDMAIDENS_VIEW_LABEL_NO_CONCEPT"
			}

			blockoverride "button_close"
			{
				onclick = "[ExecuteConsoleCommand( Select_CString( GetVariableSystem.Exists('shieldmaidens_window_open'), 'gui.ClearWidgets shieldmaidens_view', 'gui.createwidget gui/custom_windows/window_shieldmaidens.gui shieldmaidens_view' ) )]"
				onclick = "[GetVariableSystem.Toggle('shieldmaidens_window_open')]"
			}
		}
		
		hbox = {
			text_single = {
				align = bottom
				name = "shieldmaiden_ruler"
				text = "[GetVariableSystem.Get( 'current_ruler' )]"
				using = Font_Size_Big
				default_format = "#medium"
				maximumsize = { 500 10 }
				autoresize = yes
			}
			expand = {}
		}

		### empty list
		vbox = {
			name = "shieldmaidens_empty"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			visible = "[LessThan_int32( GetDataModelSize( GetGlobalList( 'character_window_shieldmaidens_list_active' ) ), '(int32)1' ) ]"
			spacer = {
				size = { 0 100 }
			}
			text_multi = {
				align = top|hcenter
				size = { 470 865 }
				text = "SV_LIST_EMPTY"
				using = Font_Size_Medium
				default_format = "#low;italic"
			}
			expand = {}
		}

		scrollbox = {
			name = "shieldmaidens_scrollbox"
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding

			visible = "[GreaterThan_int32( GetDataModelSize( GetGlobalList( 'character_window_shieldmaidens_list_active' ) ), '(int32)0' ) ]"

			background = {
				texture = "gfx/interface/illustrations/sfa_back1.dds"
				margin = { -5 0 }
				fittype = end
				alpha = 0.3
				framesize = { 1200 848 }
				modify_texture = {
					texture = "gfx/interface/component_masks/mask_fade_vertical.dds"
					blend_mode = alphamultiply
					mirror = vertical
				}
			}

			blockoverride "scrollbox_content" {
				name = "shieldmaidens_scrollbox_content"
				spacing = 5
				maximumsize = { -1 100 }

				datamodel = "[GetGlobalList('character_window_shieldmaidens_list_active')]"

				item = {
					
					
					widget = {

						datacontext = "[Scope.GetCharacter]"
						layoutpolicy_horizontal = expanding
						size = { -1 130 }

						using = Background_Guest
						blockoverride "Background_Guest_pattern_visible"
						{
							visible = "[Character.IsGuest]"
							margin_bottom = -5
							margin_right = 5
						}
						blockoverride "Background_Guest_frame_visible"
						{
							visible = "[Character.IsGuest]"
							margin_left = 3
							margin_bottom = -5
							margin_top = 1
							margin_right = 5
						}

						vbox = {
							spacing = 7
							hbox = {
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								margin_right = 5
								spacing = 10
								portrait_head = {
									alpha = "[Select_float( Character.IsKnight, '(float)1.0', '(float)0.6' )]"
								}

								vbox = {
									layoutpolicy_vertical = expanding
									layoutpolicy_horizontal = expanding
									margin_top = 3

									hbox = {
										layoutpolicy_horizontal = expanding
										layoutpolicy_vertical = expanding

										vbox = {
											layoutpolicy_horizontal = expanding
											layoutpolicy_vertical = expanding

											text_single = {
												layoutpolicy_horizontal = expanding
												text = "[Character.GetShortUINameNoTooltip]"
												maximumsize = { 390 50 }
												using = Font_Size_Medium
												autoresize = no
											}

											text_single = {
												layoutpolicy_horizontal = expanding
												text = "[Character.GetRelationToString( GetPlayer )]"
												tooltip = "EXTENDED_RELATIONS_TOOLTIP"
												maximumsize = { 390 50 }
												default_format = "#low"
												using = Font_Size_Low
												align = nobaseline
											}

											text_single = {
												layoutpolicy_horizontal = expanding
												text = "[Character.GetLocationDesc]"
												tooltip = "[Character.GetLocationDesc]"
												maximumsize = { 390 50 }
												default_format = "#low"
												using = Font_Size_Low
												align = nobaseline
											}
											
											hbox = {
												name = "skills_grid"
												layoutpolicy_horizontal = expanding
												spacing = 2
												vbox = {
													text_single  = { text = "[diplomacy_i]" }
													text_single  = {
														text = "[Character.GetSkill( 'diplomacy' )]"
														using = Font_Size_Small
														default_format = "#high"
													}
													expand = {}
												}
												vbox = {
													text_single  = { text = "[martial_i]" }
													text_single  = {
														text = "[Character.GetSkill( 'martial' )]"
														using = Font_Size_Small
														default_format = "#high"
													}
													expand = {}
												}
												vbox = {
													text_single  = { text = "[stewardship_i]" }
													text_single  = {
														text = "[Character.GetSkill( 'stewardship' )]"
														using = Font_Size_Small
														default_format = "#high"
													}
													expand = {}
												}
												vbox = {
													text_single  = { text = "[intrigue_i]" }
													text_single  = {
														text = "[Character.GetSkill( 'intrigue' )]"
														using = Font_Size_Small
														default_format = "#high"
													}
													expand = {}
												}
												vbox = {
													text_single  = { text = "[learning_i]" }
													text_single  = {
														text = "[Character.GetSkill( 'learning' )]"
														using = Font_Size_Small
														default_format = "#high"
													}
													expand = {}
												}
												vbox = {
													layoutpolicy_horizontal = expanding
													margin = { 50 0 }
													text_label_center  = {
														text = "[prowess_i][Character.GetSkill( 'prowess' )]"
														using = Font_Size_Big
														default_format = "#high"
													}
													expand = {}
												}
												hbox = {
													name = "shieldmaiden_liege_years_counter"
													layoutpolicy_horizontal = expanding
													margin = { 15 0 }
													tooltip = SV_LIEGE_YEARS_COUNTER
													icon = {
														size = { 30 30 }
														texture = "gfx/interface/icons/traits/shieldmaiden.dds"
													}
													text_single = {
														text = "[Character.MakeScope.Var( 'shieldmaiden_liege_years_counter' ).GetValue|0]"
														default_format = "#high"
														align = center|nobaseline
													}	
													expand = {}
												}
											}
											expand = {}
										}
									}									
									expand = {}
								}
							}
							divider = {
								layoutpolicy_horizontal = expanding
							}
						}
						icon = {
							visible = "[Character.IsKnight]"
							texture = "gfx/interface/icons/icon_knight_small.dds"
							size = { 45 45 }
							position = { -10 -10 }
						}
						icon = {
							name = "icon_error_liege"		
							visible = "[And( InDebugMode, Not( GetVariableSystem.HasValue( 'current_ruler', Character.GetLiege.GetUIName ) ) )]"	
							position = { 0 50 }
							size = { 25 25 }
							texture = "gfx/interface/_debug/pink_square.png"
							tooltip = "SV_LIST_ERROR_LIEGE"
						}
					}
				}
			}
		}
	}

	icon = {
		name = "icon_shieldmaidens_view"
		position = { 28 -35 }
		size = { 80 80 }
		texture = "gfx/interface/icons/traits/shieldmaiden.dds"
	}

}